# Development Workflow Rules

## 코딩 규칙

### 에러 처리
- 항상 try-catch 블록으로 에러를 처리하세요
- 사용자에게 의미있는 에러 메시지를 표시하세요
- 로깅을 통해 디버깅 정보를 기록하세요

### 성능 최적화
- React.memo를 적절히 사용하세요
- useMemo와 useCallback을 성능 최적화에 활용하세요
- 이미지 최적화를 위해 Next.js Image 컴포넌트를 사용하세요

### 보안
- 사용자 입력은 항상 검증하세요
- 민감한 정보는 환경 변수로 관리하세요
- API 키는 클라이언트 사이드에 노출하지 마세요

## AI 어시스턴트 응답 규칙

### 코드 제공
- 실제 동작하는 코드 예시를 제공하세요
- 코드의 동작 원리를 설명하세요
- Next.js와 React 모범 사례를 따르세요
- 에러 처리와 타입 안전성을 우선시하세요

### 설명 방식
- 복잡한 개념은 단계별로 설명하세요
- 코드 블록에는 적절한 언어 태그를 사용하세요
- 파일 경로는 백틱으로 감싸서 표시하세요

## 개발 워크플로우
- 기능 개발은 별도 브랜치에서 진행하세요
- 커밋 메시지는 명확하고 설명적으로 작성하세요
- PR 리뷰를 통해 코드 품질을 보장하세요

---
description: 개발 워크플로우와 코딩 규칙
globs: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx"]
alwaysApply: true
---
description:
globs:
alwaysApply: false
---
